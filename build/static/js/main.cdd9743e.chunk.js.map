{"version":3,"sources":["images/mind.svg","constants/countdownTime.js","components/LanguageSelect/index.js","components/Header/index.js","components/Layout/index.js","components/Loader/index.js","constants/numOfQuestions.js","utils/calculateGrade.js","utils/calculateScore.js","utils/getLetter.js","utils/shuffle.js","utils/timeConverter.js","components/Offline/index.js","components/Main/index.js","components/Countdown/index.js","components/Quiz/index.js","components/ShareButton/index.js","components/Result/Stats.js","components/Result/QNA.js","components/Result/index.js","components/App/index.js","i18nextConf.js","serviceWorkerRegistration.js","index.js"],"names":["module","exports","__webpack_require__","p","languageMap","en","label","dir","active","hi","LanguageSelect","_Object$keys","selected","localStorage","getItem","t","useTranslation","_React$useState","React","useState","_React$useState2","Object","slicedToArray","menuAnchor","setMenuAnchor","useEffect","document","body","react_default","a","createElement","className","Icon","size","name","Button_Button","onClick","_ref","currentTarget","style","color","ArrowDropDown_default","fontSize","Popover","open","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","List","ListSubheader","keys","map","item","ListItem","button","key","i18next","changeLanguage","Header","_useState","_useState2","promptEvent","setPromptEvent","_useState3","_useState4","appAccepted","setAppAccepted","isAppInstalled","window","matchMedia","matches","addEventListener","e","preventDefault","Menu","stackable","inverted","Item","header","href","position","Button","icon","labelPosition","content","prompt","userChoice","then","result","outcome","console","log","components_LanguageSelect","Layout","children","react","components_Header","Loader","Container","Message","loading","Content","COUNTDOWN_TIME","hours","minutes","seconds","i","push","text","value","NUM_OF_QUESTIONS","calculateGrade","score","percentage","parseInt","grade","remarks","calculateScore","totalQuestions","correctAnswers","Number","toFixed","getLetter","number","letter","shuffle","array","toConsumableArray","length","j","Math","floor","random","timeConverter","milliseconds","concat","slice","Offline","location","reload","Segment","placeholder","elements_Header_Header","role","aria-label","Main","startQuiz","category","setCategory","numOfQuestions","setNumOfQuestions","_useState5","_useState6","difficulty","setDifficulty","_useState7","_useState8","questionsType","setQuestionsType","_useState9","_useState10","countdownTime","setCountdownTime","_useState11","_useState12","processing","setProcessing","_useState13","_useState14","error","setError","_useState15","_useState16","offline","setOffline","handleTimeChange","_ref2","objectSpread2","defineProperty","DIFFICULTY","QUESTIONS_TYPE","CATEGORIES","allFieldsSelected","components_Offline","Group","divided","Image","src","mindImg","onDismiss","message","Divider","Meta","Dropdown","fluid","selection","options","onChange","_ref3","disabled","_ref4","_ref5","_ref6","search","Extra","primary","API","fetch","respone","json","data","setTimeout","response_code","results","forEach","element","correct_answer","incorrect_answers","catch","navigator","onLine","Countdown","timeOver","setTimeTaken","totalTime","timerTime","setTimerTime","_timeConverter","timer","setInterval","newTime","clearInterval","Swal","fire","title","willClose","basic","floated","Popup","trigger","Quiz","endQuiz","questionIndex","setQuestionIndex","setCorrectAnswers","userSlectedAns","setUserSlectedAns","questionsAndAnswers","setQuestionsAndAnswers","timeTaken","handleItemClick","as","block","components_Countdown","floating","he","decode","question","Description","option","decodedOption","marginRight","point","qna","user_answer","ShareButton","share","circular","Modal","closeIcon","target","rel","marginBottom","Stats","replayQuiz","resetQuiz","_calculateGrade","textAlign","marginTop","components_ShareButton","QNA","Table","celled","striped","selectable","Row","HeaderCell","Body","Cell","Result","activeTab","setActiveTab","handleTabClick","widths","Result_Stats","Result_QNA","App","setLoading","setData","isQuizStarted","setIsQuizStarted","isQuizCompleted","setIsQuizCompleted","resultData","setResultData","fallback","components_Loader","components_Layout","components_Main","components_Quiz","components_Result","assign","shuffledData","resources","translation","i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","detection","checkWhitelist","debug","whitelist","interpolation","escapeValue","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","toast","showConfirmButton","onSuccess","ReactDOM","render","StrictMode","components_App","getElementById","URL","process","origin","headers","Service-Worker","response","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.cdd9743e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mind.bfb21a23.svg\";","const COUNTDOWN_TIME = {\n  hours: [],\n  minutes: [],\n  seconds: []\n};\n\nfor (let i = 0; i < 100; i++) {\n  COUNTDOWN_TIME.hours.push({ key: i, text: i, value: i * 60 * 60 });\n}\n\nfor (let i = 0; i < 60; i++) {\n  COUNTDOWN_TIME.minutes.push({ key: i, text: i, value: i * 60 });\n}\n\nfor (let i = 0; i < 60; i++) {\n  COUNTDOWN_TIME.seconds.push({ key: i, text: i, value: i });\n}\n\nexport default COUNTDOWN_TIME;\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport i18next from \"i18next\";\r\n\r\nimport ArrowDropDown from \"@material-ui/icons/ArrowDropDown\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport { Icon } from 'semantic-ui-react'\r\n\r\nconst languageMap = {\r\n  en: { label: \"English\", dir: \"ltr\", active: true },\r\n  hi: { label: \"हिंदी\", dir: \"ltr\", active: false }\r\n};\r\n\r\nconst LanguageSelect = () => {\r\n  const selected = localStorage.getItem(\"i18nextLng\") || \"en\";\r\n  const { t } = useTranslation();\r\n\r\n  const [menuAnchor, setMenuAnchor] = React.useState(null);\r\n  React.useEffect(() => {\r\n    document.body.dir = languageMap[selected].dir;\r\n  }, [menuAnchor, selected]);\r\n\r\n  return (\r\n  \r\n    <div className=\"d-flex justify-content-end align-items-center language-select-root\">\r\n   \r\n    <Icon size='large' name='world' />\r\n\r\n\r\n      <Button onClick={({ currentTarget }) => setMenuAnchor(currentTarget)} style={{color:\"white\"}} size=\"large\">\r\n        {languageMap[selected].label}\r\n        <ArrowDropDown fontSize=\"large\" />\r\n      </Button>\r\n      <Popover\r\n        open={!!menuAnchor}\r\n        anchorEl={menuAnchor}\r\n        onClose={() => setMenuAnchor(null)}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"right\"\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"right\"\r\n        }}\r\n      >\r\n        <div>\r\n          <List>\r\n            <strong><ListSubheader>{t(\"select_language\")}</ListSubheader></strong>\r\n            {Object.keys(languageMap)?.map(item => (\r\n              <ListItem\r\n                button\r\n                key={item}\r\n                onClick={() => {\r\n                  i18next.changeLanguage(item);\r\n                  setMenuAnchor(null);\r\n                }}\r\n              >\r\n                {languageMap[item].label}\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      </Popover>\r\n    </div>\r\n  \r\n    \r\n  );\r\n};\r\n\r\nexport default LanguageSelect;\r\n","import React, { useState } from 'react';\nimport { Menu, Button} from 'semantic-ui-react';\nimport LanguageSelect from \"../LanguageSelect\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Header = () => {\n  const [promptEvent, setPromptEvent] = useState(null);\n  const [appAccepted, setAppAccepted] = useState(false);\n\n  let isAppInstalled = false;\n  const { t } = useTranslation();\n\n  if (window.matchMedia('(display-mode: standalone)').matches || appAccepted) {\n    isAppInstalled = true;\n  }\n\n  window.addEventListener('beforeinstallprompt', e => {\n    e.preventDefault();\n    setPromptEvent(e);\n  });\n\n  const installApp = () => {\n    promptEvent.prompt();\n    promptEvent.userChoice.then(result => {\n      if (result.outcome === 'accepted') {\n        setAppAccepted(true);\n        console.log('User accepted the A2HS prompt');\n      } else {\n        console.log('User dismissed the A2HS prompt');\n      }\n    });\n  };\n\n  return (\n    <Menu stackable inverted size=\"massive\">\n      <Menu.Item header>\n        <a href=\"/\"><h1 style={{ color: '#2185D0' }}>{t('title')}</h1>\n        <sup> {t('tagLine')}</sup></a>\n      </Menu.Item>\n    \n      \n      {promptEvent && !isAppInstalled && (\n        <Menu.Item position=\"right\">\n          <Button\n            color=\"teal\"\n            icon=\"cloud download\"\n            labelPosition=\"left\"\n            content=\"Install App\"\n            onClick={installApp}\n          />\n        </Menu.Item>\n      )}\n\n    <Menu.Item position = \"right\">\n     \n     <LanguageSelect />\n\n   </Menu.Item>\n    </Menu>\n  );\n};\n\nexport default Header;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Header from '../Header';\n\nconst Layout = ({ children }) => {\n  return (\n    <Fragment>\n      <Header />\n      <main>{children}</main>\n    </Fragment>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Layout;\n","import React from 'react';\nimport { Container, Message, Icon } from 'semantic-ui-react';\nimport { useTranslation } from \"react-i18next\";\n\nconst Loader = () => {\n  const { t } = useTranslation();\n  return (\n    <Container>\n      <Message icon size=\"big\">\n        <Icon name=\"circle notched\" loading />\n        <Message.Content>\n          <Message.Header>{t('Loader.titleMessage')}</Message.Header>\n          {t('Loader.description')}\n        </Message.Content>\n      </Message>\n    </Container>\n  );\n};\n\nexport default Loader;\n","const NUM_OF_QUESTIONS = [];\n\nfor (let i = 1; i <= 50; i++) {\n  NUM_OF_QUESTIONS.push({ key: i, text: i, value: i });\n}\n\nexport default NUM_OF_QUESTIONS;\n","import { useTranslation } from \"react-i18next\";\n\nconst calculateGrade = score => {\n  const percentage = parseInt(score);\n \n  let grade = null;\n  let remarks = '';\n\n  if (percentage >= 97) {\n    grade = 'A+';\n  } else if (percentage >= 93 && percentage <= 96) {\n    grade = 'A';\n  } else if (percentage >= 90 && percentage <= 92) {\n    grade = 'A-';\n  } else if (percentage >= 87 && percentage <= 89) {\n    grade = 'B+';\n  } else if (percentage >= 83 && percentage <= 86) {\n    grade = 'B';\n  } else if (percentage >= 80 && percentage <= 82) {\n    grade = 'B-';\n  } else if (percentage >= 77 && percentage <= 79) {\n    grade = 'C+';\n  } else if (percentage >= 73 && percentage <= 76) {\n    grade = 'C';\n  } else if (percentage >= 70 && percentage <= 72) {\n    grade = 'C-';\n  } else if (percentage >= 67 && percentage <= 69) {\n    grade = 'D+';\n  } else if (percentage >= 63 && percentage <= 66) {\n    grade = 'D';\n  } else if (percentage >= 60 && percentage <= 62) {\n    grade = 'D-';\n  } else if (percentage < 60) {\n    grade = 'F';\n  }\n\n  if (score >= 60) {\n    remarks = \"Pass\";\n  } else {\n    remarks = \"Fail\";\n  }\n\n  return {\n    grade,\n    remarks\n  };\n};\n\nexport default calculateGrade;\n","const calculateScore = (totalQuestions, correctAnswers) => {\n  return Number(((correctAnswers * 100) / totalQuestions).toFixed(2));\n};\n\nexport default calculateScore;\n","const getLetter = number => {\n  let letter;\n\n  switch (number) {\n    case 0:\n      letter = 'A.';\n      break;\n    case 1:\n      letter = 'B.';\n      break;\n    case 2:\n      letter = 'C.';\n      break;\n    case 3:\n      letter = 'D.';\n      break;\n    default:\n      letter = null;\n      break;\n  }\n\n  return letter;\n};\n\nexport default getLetter;\n","const shuffle = array => {\n  array = [...array];\n\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n\n  return array;\n};\n\nexport default shuffle;\n","const timeConverter = milliseconds => {\n  const hours = `0${Math.floor(milliseconds / 3600000)}`.slice(-2);\n  const minutes = `0${Math.floor((milliseconds / 60000) % 60)}`.slice(-2);\n  const seconds = `0${Math.floor((milliseconds / 1000) % 60) % 60}`.slice(-2);\n\n  return {\n    hours,\n    minutes,\n    seconds\n  };\n};\n\nexport default timeConverter;\n","import React from 'react';\nimport { Container, Segment, Header, Icon } from 'semantic-ui-react';\n\nconst Offline = () => {\n  window.addEventListener('online', () => window.location.reload());\n\n  return (\n    <Container>\n      <Segment placeholder>\n        <Header icon>\n          <Icon name=\"unlink\" />\n          <h1>Offline</h1>\n          <p>\n          कोई इंटरनेट कनेक्शन नहीं है। हम स्वचालित रूप से पुनः लोड करने का प्रयास करेंगे\n            एक बार आप ऑनलाइन वापस आ गए!{' '}\n            <span role=\"img\" aria-label=\"signal\">\n              📶\n            </span>\n          </p>\n        </Header>\n      </Segment>\n    </Container>\n  );\n};\n\nexport default Offline;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Container,\n  Segment,\n  Item,\n  Dropdown,\n  Divider,\n  Button,\n  Message\n} from 'semantic-ui-react';\n\nimport mindImg from '../../images/mind.svg';\n\nimport {\n  NUM_OF_QUESTIONS,\n  COUNTDOWN_TIME\n} from '../../constants';\nimport { shuffle } from '../../utils';\n\nimport Offline from '../Offline';\n\nimport { useTranslation } from \"react-i18next\";\n\nconst Main = ({ startQuiz }) => {\n  const [category, setCategory] = useState(null);\n  const [numOfQuestions, setNumOfQuestions] = useState(null);\n  const [difficulty, setDifficulty] = useState(null);\n  const [questionsType, setQuestionsType] = useState(null);\n  const [countdownTime, setCountdownTime] = useState({\n    hours: null,\n    minutes: null,\n    seconds: null\n  });\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState(null);\n  const [offline, setOffline] = useState(false);\n  const { t } = useTranslation();\n\n\n  const handleTimeChange = (e, { name, value }) => {\n    setCountdownTime({ ...countdownTime, [name]: value });\n  };\n\n  const DIFFICULTY =  [{\n    key: '0',\n    text: t(\"Difficulty.Any\"),\n    value: '0'\n  },\n  {\n    key: 'easy',\n    text: t(\"Difficulty.Easy\"),\n    value: 'easy'\n  },\n  {\n    key: 'medium',\n    text: t(\"Difficulty.Medium\"),\n    value: 'medium'\n  },\n  {\n    key: 'hard',\n    text: t(\"Difficulty.Hard\"),\n    value: 'hard'\n  }];\n\n  const QUESTIONS_TYPE = [\n    {\n      key: '0',\n      text: t(\"QuestionType.AnyType\"),\n      value: '0'\n    },\n    {\n      key: 'multiple',\n      text: t(\"QuestionType.MultipleChoice\"),\n      value: 'multiple'\n    },\n    {\n      key: 'boolean',\n      text: t(\"QuestionType.TrueFalse\"),\n      value: 'boolean'\n    }\n  ];\n \n  const CATEGORIES =  [\n    {\n      \"key\":0,\n      \"text\":t(\"Categories.0.text\"),\n      \"value\":\"0\"\n    },\n    {\n      \"key\":9,\n      \"text\":t(\"Categories.9.text\"),\n      \"value\":9\n    },\n    {\n      \"key\":10,\n      \"text\":t(\"Categories.10.text\"),\n      \"value\":10\n    },\n    {\n      \"key\":11,\n      \"text\":t(\"Categories.11.text\"),\n      \"value\":11\n    },\n    {\n      \"key\":12,\n      \"text\":t(\"Categories.12.text\"),\n      \"value\":12\n    },\n    {\n      \"key\":13,\n      \"text\":t(\"Categories.13.text\"),\n      \"value\":13\n    },\n    {\n      \"key\":14,\n      \"text\":t(\"Categories.14.text\"),\n      \"value\":14\n    },\n    {\n      \"key\":15,\n      \"text\":t(\"Categories.15.text\"),\n      \"value\":15\n    },\n    {\n      \"key\":16,\n      \"text\":t(\"Categories.16.text\"),\n      \"value\":16\n    },\n    {\n      \"key\":17,\n      \"text\":t(\"Categories.17.text\"),\n      \"value\":17\n    },\n    {\n      \"key\":18,\n      \"text\":t(\"Categories.18.text\"),\n      \"value\":18\n    },\n    {\n      \"key\":19,\n      \"text\":t(\"Categories.19.text\"),\n      \"value\":19\n    },\n    {\n      \"key\":20,\n      \"text\":t(\"Categories.20.text\"),\n      \"value\":20\n    },\n    {\n      \"key\":21,\n      \"text\":t(\"Categories.21.text\"),\n      \"value\":21\n    },\n    {\n      \"key\":22,\n      \"text\":t(\"Categories.22.text\"),\n      \"value\":22\n    },\n    {\n      \"key\":23,\n      \"text\":t(\"Categories.23.text\"),\n      \"value\":23\n    },\n    {\n      \"key\":24,\n      \"text\":t(\"Categories.24.text\"),\n      \"value\":24\n    },\n    {\n      \"key\":25,\n      \"text\":t(\"Categories.25.text\"),\n      \"value\":25\n    },\n    {\n      \"key\":26,\n      \"text\":t(\"Categories.26.text\"),\n      \"value\":26\n    },\n    {\n      \"key\":27,\n      \"text\":t(\"Categories.27.text\"),\n      \"value\":27\n    },\n    {\n      \"key\":28,\n      \"text\":t(\"Categories.28.text\"),\n      \"value\":28\n    },\n    {\n      \"key\":29,\n      \"text\":t(\"Categories.29.text\"),\n      \"value\":29\n    },\n    {\n      \"key\":30,\n      \"text\":t(\"Categories.30.text\"),\n      \"value\":30\n    },\n    {\n      \"key\":31,\n      \"text\":t(\"Categories.31.text\"),\n      \"value\":31\n    },\n    {\n      \"key\":32,\n      \"text\":t(\"Categories.32.text\"),\n      \"value\":32\n    }\n  ];\n\n  let allFieldsSelected = false;\n  if (\n    category &&\n    numOfQuestions &&\n    difficulty &&\n    questionsType &&\n    (countdownTime.hours || countdownTime.minutes || countdownTime.seconds)\n  ) {\n    allFieldsSelected = true;\n  }\n\n  const fetchData = () => {\n    setProcessing(true);\n\n    if (error) setError(null);\n\n    const API = `https://opentdb.com/api.php?amount=${numOfQuestions}&category=${category}&difficulty=${difficulty}&type=${questionsType}`;\n\n    fetch(API)\n      .then(respone => respone.json())\n      .then(data =>\n        setTimeout(() => {\n          const { response_code, results } = data;\n\n          if (response_code === 1) {\n            const message = (\n              <p>\n                The API doesn't have enough questions for your query. (Ex.\n                Asking for 50 Questions in a Category that only has 20.)\n                <br />\n                <br />\n                Please change the <strong>No. of Questions</strong>,{' '}\n                <strong>Difficulty Level</strong>, or{' '}\n                <strong>Type of Questions</strong>.\n              </p>\n            );\n\n            setProcessing(false);\n            setError({ message });\n\n            return;\n          }\n\n          results.forEach(element => {\n            element.options = shuffle([\n              element.correct_answer,\n              ...element.incorrect_answers\n            ]);\n          });\n\n          setProcessing(false);\n          startQuiz(\n            results,\n            countdownTime.hours + countdownTime.minutes + countdownTime.seconds\n          );\n        }, 1000)\n      )\n      .catch(error =>\n        setTimeout(() => {\n          if (!navigator.onLine) {\n            setOffline(true);\n          } else {\n            setProcessing(false);\n            setError(error);\n          }\n        }, 1000)\n      );\n  };\n\n  if (offline) return <Offline />;\n\n  return (\n    <Container>\n      <Segment>\n        <Item.Group divided>\n          <Item>\n            <Item.Image src={mindImg} />\n            <Item.Content>\n              <Item.Header>\n                <h1>{t('headerTitle')}</h1>\n                \n                <h5>{t('headerDescription')}</h5>\n              </Item.Header>\n              {error && (\n                <Message error onDismiss={() => setError(null)}>\n                  <Message.Header>Error!</Message.Header>\n                  {error.message}\n                </Message>\n              )}\n              <Divider />\n              <Item.Meta>\n                <Dropdown\n                  fluid\n                  selection\n                  name=\"category\"\n                  placeholder={t(\"Questions.category\")}\n                  options={CATEGORIES}\n                  value={category}\n                  onChange={(e, { value }) => setCategory(value)}\n                  disabled={processing}\n                />\n                <br />\n                <Dropdown\n                  fluid\n                  selection\n                  name=\"numOfQ\"\n                  placeholder={t(\"Questions.numOfQ\")}\n                  options={NUM_OF_QUESTIONS}\n                  value={numOfQuestions}\n                  onChange={(e, { value }) => setNumOfQuestions(value)}\n                  disabled={processing}\n                />\n                <br />\n                <Dropdown\n                  fluid\n                  selection\n                  name=\"difficulty\"\n                  placeholder={t(\"Questions.difficulty\")}\n                  options={DIFFICULTY}\n                  value={difficulty}\n                  onChange={(e, { value }) => setDifficulty(value)}\n                  disabled={processing}\n                />\n                <br />\n                <Dropdown\n                  fluid\n                  selection\n                  name=\"type\"\n                  placeholder={t(\"Questions.type\")}\n                  options={QUESTIONS_TYPE}\n                  value={questionsType}\n                  onChange={(e, { value }) => setQuestionsType(value)}\n                  disabled={processing}\n                />\n                <br />\n                <Dropdown\n                  search\n                  selection\n                  name=\"hours\"\n                  placeholder={t(\"Questions.hours\")}\n                  options={COUNTDOWN_TIME.hours}\n                  value={countdownTime.hours}\n                  onChange={handleTimeChange}\n                  disabled={processing}\n                />\n                <Dropdown\n                  search\n                  selection\n                  name=\"minutes\"\n                  placeholder={t(\"Questions.minutes\")}\n                  options={COUNTDOWN_TIME.minutes}\n                  value={countdownTime.minutes}\n                  onChange={handleTimeChange}\n                  disabled={processing}\n                />\n                <Dropdown\n                  search\n                  selection\n                  name=\"seconds\"\n                  placeholder={t(\"Questions.seconds\")}\n                  options={COUNTDOWN_TIME.seconds}\n                  value={countdownTime.seconds}\n                  onChange={handleTimeChange}\n                  disabled={processing}\n                />\n              </Item.Meta>\n              <Divider />\n              <Item.Extra>\n                <Button\n                  primary\n                  size=\"big\"\n                  icon=\"play\"\n                  labelPosition=\"left\"\n                  content={processing ? t(\"Questions.wait\") : t(\"Questions.letsStart\")}\n                  onClick={fetchData}\n                  disabled={!allFieldsSelected || processing}\n                />\n              </Item.Extra>\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      <br />\n    </Container>\n  );\n};\n\nMain.propTypes = {\n  startQuiz: PropTypes.func.isRequired\n};\n\nexport default Main;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Popup } from 'semantic-ui-react';\nimport Swal from 'sweetalert2';\n\nimport { timeConverter } from '../../utils';\n\nconst Countdown = ({ countdownTime, timeOver, setTimeTaken }) => {\n  const totalTime = countdownTime * 1000;\n  const [timerTime, setTimerTime] = useState(totalTime);\n  const { hours, minutes, seconds } = timeConverter(timerTime);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const newTime = timerTime - 1000;\n\n      if (newTime >= 0) {\n        setTimerTime(newTime);\n      } else {\n        clearInterval(timer);\n\n        Swal.fire({\n          title: `Your Time's Up`,\n          icon: 'info',\n          timer: 5000,\n          willClose: () => timeOver(totalTime - timerTime)\n        });\n      }\n    }, 1000);\n\n    return () => {\n      clearInterval(timer);\n      setTimeTaken(totalTime - timerTime + 1000);\n    };\n\n    // eslint-disable-next-line\n  }, [timerTime]);\n\n  return (\n    <Button.Group size=\"massive\" basic floated=\"right\">\n      <Popup\n        content=\"Hours\"\n        trigger={<Button active>{hours}</Button>}\n        position=\"bottom left\"\n      />\n      <Popup\n        content=\"Minutes\"\n        trigger={<Button active>{minutes}</Button>}\n        position=\"bottom left\"\n      />\n      <Popup\n        content=\"Seconds\"\n        trigger={<Button active>{seconds}</Button>}\n        position=\"bottom left\"\n      />\n    </Button.Group>\n  );\n};\n\nCountdown.propTypes = {\n  countdownTime: PropTypes.number.isRequired,\n  timeOver: PropTypes.func.isRequired,\n  setTimeTaken: PropTypes.func.isRequired\n};\n\nexport default Countdown;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Container,\n  Segment,\n  Item,\n  Divider,\n  Button,\n  Icon,\n  Message,\n  Menu,\n  Header\n} from 'semantic-ui-react';\nimport he from 'he';\n\nimport Countdown from '../Countdown';\nimport { getLetter } from '../../utils';\nimport { useTranslation } from \"react-i18next\";\n\nconst Quiz = ({ data, countdownTime, endQuiz }) => {\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [userSlectedAns, setUserSlectedAns] = useState(null);\n  const [questionsAndAnswers, setQuestionsAndAnswers] = useState([]);\n  const [timeTaken, setTimeTaken] = useState(null);\n  const { t } = useTranslation();\n\n  const handleItemClick = (e, { name }) => {\n    setUserSlectedAns(name);\n  };\n\n  const handleNext = () => {\n    let point = 0;\n    if (userSlectedAns === he.decode(data[questionIndex].correct_answer)) {\n      point = 1;\n    }\n\n    const qna = questionsAndAnswers;\n    qna.push({\n      question: he.decode(data[questionIndex].question),\n      user_answer: userSlectedAns,\n      correct_answer: he.decode(data[questionIndex].correct_answer),\n      point\n    });\n\n    if (questionIndex === data.length - 1) {\n      return endQuiz({\n        totalQuestions: data.length,\n        correctAnswers: correctAnswers + point,\n        timeTaken,\n        questionsAndAnswers: qna\n      });\n    }\n\n    setCorrectAnswers(correctAnswers + point);\n    setQuestionIndex(questionIndex + 1);\n    setUserSlectedAns(null);\n    setQuestionsAndAnswers(qna);\n  };\n\n  const timeOver = timeTaken => {\n    return endQuiz({\n      totalQuestions: data.length,\n      correctAnswers,\n      timeTaken,\n      questionsAndAnswers\n    });\n  };\n\n  return (\n    <Item.Header>\n      <Container>\n        <Segment>\n          <Item.Group divided>\n            <Item>\n              <Item.Content>\n                <Item.Extra>\n                  <Header as=\"h1\" block floated=\"left\">\n                    <Icon name=\"info circle\" />\n                    <Header.Content>\n                      {`${t('Quiz.questionNo')}: ${questionIndex + 1} ${t('Quiz.totalQuestions')}: ${data.length}`}\n                    </Header.Content>\n                  </Header>\n                  <Countdown\n                    countdownTime={countdownTime}\n                    timeOver={timeOver}\n                    setTimeTaken={setTimeTaken}\n                  />\n                </Item.Extra>\n                <br />\n                <Item.Meta>\n                  <Message size=\"huge\" floating>\n                    <b>{`Q. ${he.decode(data[questionIndex].question)}`}</b>\n                  </Message>\n                  <br />\n                  <Item.Description>\n                    <h3>Please choose one of the following answers:</h3>\n                  </Item.Description>\n                  <Divider />\n                  <Menu vertical fluid size=\"massive\">\n                    {data[questionIndex].options.map((option, i) => {\n                      const letter = getLetter(i);\n                      const decodedOption = he.decode(option);\n\n                      return (\n                        <Menu.Item\n                          key={decodedOption}\n                          name={decodedOption}\n                          active={userSlectedAns === decodedOption}\n                          onClick={handleItemClick}\n                        >\n                          <b style={{ marginRight: '8px' }}>{letter}</b>\n                          {decodedOption}\n                        </Menu.Item>\n                      );\n                    })}\n                  </Menu>\n                </Item.Meta>\n                <Divider />\n                <Item.Extra>\n                  <Button\n                    primary\n                    content={t(\"Quiz.nextQuestion\")}\n                    onClick={handleNext}\n                    floated=\"right\"\n                    size=\"big\"\n                    icon=\"right chevron\"\n                    labelPosition=\"right\"\n                    disabled={!userSlectedAns}\n                  />\n                </Item.Extra>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n        <br />\n      </Container>\n    </Item.Header>\n  );\n};\n\nQuiz.propTypes = {\n  data: PropTypes.array.isRequired,\n  countdownTime: PropTypes.number.isRequired,\n  endQuiz: PropTypes.func.isRequired\n};\n\nexport default Quiz;\n","import React, { Fragment } from 'react';\nimport { Button, Icon, Modal } from 'semantic-ui-react';\n\nconst ShareButton = () => {\n  const handleClick = () => {\n    navigator\n      .share({\n        title: document.title,\n        text: 'Check out this quiz app — it rocks!',\n      })\n      .then(() => console.log('Successfully shared'))\n      .catch(error => console.log(error.message));\n  };\n\n  return (\n    <Fragment>\n      {navigator.share ? (\n        <Button\n          title=\"Share\"\n          floated=\"right\"\n          size=\"big\"\n          circular\n          icon=\"share alternate\"\n          onClick={handleClick}\n        />\n      ) : (\n        <Modal\n          closeIcon\n          size=\"tiny\"\n          trigger={\n            <Button\n              title=\"Share\"\n              floated=\"right\"\n              size=\"big\"\n              circular\n              icon=\"share alternate\"\n            />\n          }\n        >\n          <Modal.Header className=\"ui center aligned\">Share on</Modal.Header>\n          <Modal.Content className=\"ui center aligned container\">\n            <a\n              href=\"https://www.facebook.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Button color=\"facebook\" size=\"big\" style={{ marginBottom: 8 }}>\n                <Icon name=\"facebook\" />\n                Facebook\n              </Button>\n            </a>\n            <a\n              href=\"https://twitter.com/intent/tweet\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Button color=\"twitter\" size=\"big\" style={{ marginBottom: 8 }}>\n                <Icon name=\"twitter\" />\n                Twitter\n              </Button>\n            </a>\n            <a\n              href=\"https://www.linkedin.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Button color=\"linkedin\" size=\"big\">\n                <Icon name=\"linkedin\" />\n                LinkedIn\n              </Button>\n            </a>\n          </Modal.Content>\n        </Modal>\n      )}\n    </Fragment>\n  );\n};\n\nexport default ShareButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment, Header, Button } from 'semantic-ui-react';\n\nimport ShareButton from '../ShareButton';\nimport { calculateScore, calculateGrade, timeConverter } from '../../utils';\nimport { useTranslation } from \"react-i18next\";\n\nconst Stats = ({\n  totalQuestions,\n  correctAnswers,\n  timeTaken,\n  replayQuiz,\n  resetQuiz\n}) => {\n  const score = calculateScore(totalQuestions, correctAnswers);\n  const { grade, remarks } = calculateGrade(score);\n  const { hours, minutes, seconds } = timeConverter(timeTaken);\n  const { t } = useTranslation();\n\n  return (\n    <Segment>\n      <Header as=\"h1\" textAlign=\"center\" block>\n        {remarks}\n      </Header>\n      <Header as=\"h2\" textAlign=\"center\" block>\n      {t(\"Stats.Grade\")} : {grade}\n      </Header>\n      <Header as=\"h3\" textAlign=\"center\" block>\n      {t(\"Stats.TotalQuestions\")} : {totalQuestions}\n      </Header>\n      <Header as=\"h3\" textAlign=\"center\" block>\n      {t(\"Stats.CorrectAnswers\")} : {correctAnswers}\n      </Header>\n      <Header as=\"h3\" textAlign=\"center\" block>\n      {t(\"Stats.Score\")} : {score}%\n      </Header>\n      <Header as=\"h3\" textAlign=\"center\" block>\n      {t(\"Stats.MinimumRequired\")}: 60%\n      </Header>\n      <Header as=\"h3\" textAlign=\"center\" block>\n      {t(\"Stats.TimeTaken\")} :{' '}\n        {`${Number(hours)} ${t(\"Stats.Hours\")}  ${Number(minutes)} ${t(\"Stats.Minutes\")}  ${Number(seconds)} ${t(\"Stats.Seconds\")} `}\n      </Header>\n      <div style={{ marginTop: 35 }}>\n        <Button\n          primary\n          content={t(\"Stats.RepeatTest\")}\n          onClick={replayQuiz}\n          size=\"big\"\n          icon=\"redo\"\n          labelPosition=\"left\"\n          style={{ marginRight: 15, marginBottom: 8 }}\n        />\n        <Button\n          color=\"teal\"\n          content={t(\"Stats.NewTest\")}\n          onClick={resetQuiz}\n          size=\"big\"\n          icon=\"home\"\n          labelPosition=\"left\"\n          style={{ marginBottom: 8 }}\n        />\n        <ShareButton />\n      </div>\n    </Segment>\n  );\n};\n\nStats.propTypes = {\n  totalQuestions: PropTypes.number.isRequired,\n  correctAnswers: PropTypes.number.isRequired,\n  timeTaken: PropTypes.number.isRequired,\n  replayQuiz: PropTypes.func.isRequired,\n  resetQuiz: PropTypes.func.isRequired\n};\n\nexport default Stats;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'semantic-ui-react';\nimport { useTranslation } from \"react-i18next\";\n\nconst QNA = ({ questionsAndAnswers }) => {\n  const { t } = useTranslation();\n  return (\n    <Table celled striped selectable size=\"large\">\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>{t(\"Qna.SerialNo\")}</Table.HeaderCell>\n          <Table.HeaderCell>{t(\"Qna.Question\")} </Table.HeaderCell>\n          <Table.HeaderCell>{t(\"Qna.Answer\")}</Table.HeaderCell>\n          <Table.HeaderCell>{t(\"Qna.CorrectAnswer\")}</Table.HeaderCell>\n          <Table.HeaderCell>{t(\"Qna.MarksObtained\")}</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {questionsAndAnswers.map((item, i) => (\n          <Table.Row key={i + 1}>\n            <Table.Cell>{i + 1}</Table.Cell>\n            <Table.Cell>{item.question}</Table.Cell>\n            <Table.Cell>{item.user_answer}</Table.Cell>\n            <Table.Cell>{item.correct_answer}</Table.Cell>\n            <Table.Cell>{item.point}</Table.Cell>\n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  );\n};\n\nQNA.propTypes = {\n  questionsAndAnswers: PropTypes.array.isRequired\n};\n\nexport default QNA;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Menu } from 'semantic-ui-react';\n\nimport Stats from './Stats';\nimport QNA from './QNA';\nimport { useTranslation } from \"react-i18next\";\n\nconst Result = ({\n  totalQuestions,\n  correctAnswers,\n  timeTaken,\n  questionsAndAnswers,\n  replayQuiz,\n  resetQuiz\n}) => {\n  const [activeTab, setActiveTab] = useState('Stats');\n  const { t } = useTranslation();\n\n  const handleTabClick = (e, { name }) => {\n    setActiveTab(name);\n  };\n\n  return (\n    <Container>\n      <Menu fluid widths={2} >\n        <Menu.Item\n          content={t(\"Result.Stats\")}\n          name=\"Stats\"\n          active={activeTab === 'Stats'}\n          onClick={handleTabClick}\n        />\n        <Menu.Item\n          content={t(\"Result.Qna\")}\n          name=\"QNA\"\n          active={activeTab === 'QNA'}\n          onClick={handleTabClick}\n          className=\"bold\"\n        />\n      </Menu>\n      {activeTab === 'Stats' && (\n        <Stats\n          totalQuestions={totalQuestions}\n          correctAnswers={correctAnswers}\n          timeTaken={timeTaken}\n          replayQuiz={replayQuiz}\n          resetQuiz={resetQuiz}\n        />\n      )}\n      {activeTab === 'QNA' && <QNA questionsAndAnswers={questionsAndAnswers} />}\n      <br />\n    </Container>\n  );\n};\n\nResult.propTypes = {\n  totalQuestions: PropTypes.number.isRequired,\n  correctAnswers: PropTypes.number.isRequired,\n  timeTaken: PropTypes.number.isRequired,\n  questionsAndAnswers: PropTypes.array.isRequired,\n  replayQuiz: PropTypes.func.isRequired,\n  resetQuiz: PropTypes.func.isRequired\n};\n\nexport default Result;\n","import React, { useState } from 'react';\nimport { Suspense } from 'react';\nimport Layout from '../Layout';\nimport Loader from '../Loader';\nimport Main from '../Main';\nimport Quiz from '../Quiz';\nimport Result from '../Result';\n\nimport { shuffle } from '../../utils';\n\nconst App = () => {\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState(null);\n  const [countdownTime, setCountdownTime] = useState(null);\n  const [isQuizStarted, setIsQuizStarted] = useState(false);\n  const [isQuizCompleted, setIsQuizCompleted] = useState(false);\n  const [resultData, setResultData] = useState(null);\n\n  const startQuiz = (data, countdownTime) => {\n    setLoading(true);\n    setCountdownTime(countdownTime);\n\n    setTimeout(() => {\n      setData(data);\n      setIsQuizStarted(true);\n      setLoading(false);\n    }, 1000);\n  };\n\n  const endQuiz = resultData => {\n    setLoading(true);\n\n    setTimeout(() => {\n      setIsQuizStarted(false);\n      setIsQuizCompleted(true);\n      setResultData(resultData);\n      setLoading(false);\n    }, 2000);\n  };\n\n  const replayQuiz = () => {\n    setLoading(true);\n\n    const shuffledData = shuffle(data);\n    shuffledData.forEach(element => {\n      element.options = shuffle(element.options);\n    });\n\n    setData(shuffledData);\n\n    setTimeout(() => {\n      setIsQuizStarted(true);\n      setIsQuizCompleted(false);\n      setResultData(null);\n      setLoading(false);\n    }, 1000);\n  };\n\n  const resetQuiz = () => {\n    setLoading(true);\n\n    setTimeout(() => {\n      setData(null);\n      setCountdownTime(null);\n      setIsQuizStarted(false);\n      setIsQuizCompleted(false);\n      setResultData(null);\n      setLoading(false);\n    }, 1000);\n  };\n\n  return (\n    <Suspense fallback={<Loader />}>\n    <Layout>\n      {loading && <Loader />}\n      {!loading && !isQuizStarted && !isQuizCompleted && (\n        <Main startQuiz={startQuiz} />\n      )}\n      {!loading && isQuizStarted && (\n        <Quiz data={data} countdownTime={countdownTime} endQuiz={endQuiz} />\n      )}\n      {!loading && isQuizCompleted && (\n        <Result {...resultData} replayQuiz={replayQuiz} resetQuiz={resetQuiz} />\n      )}\n    </Layout>\n    </Suspense>\n  );\n};\n\nexport default App;\n","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport Backend from \"i18next-xhr-backend\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\nimport translationEN from \"./assets/locales/en/translation.json\";\r\nimport translationHI from \"./assets/locales/hi/translation.json\";\r\n\r\nconst fallbackLng = [\"en\"];\r\nconst availableLanguages = [\"en\", \"hi\"];\r\n\r\nconst resources = {\r\n  en: {\r\n    translation: translationEN\r\n  },\r\n  hi: {\r\n    translation: translationHI\r\n  }\r\n};\r\n\r\ni18n\r\n  .use(Backend)\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    resources,\r\n    fallbackLng,\r\n\r\n    detection: {\r\n      checkWhitelist: true\r\n    },\r\n\r\n    debug: false,\r\n\r\n    whitelist: availableLanguages,\r\n\r\n    interpolation: {\r\n      escapeValue: false\r\n    }\r\n  });\r\n\r\nexport default i18n;","import Swal from 'sweetalert2';\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service worker.'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              Swal.fire({\n                toast: 'true',\n                position: 'bottom',\n                icon: 'success',\n                title: 'App is ready to work offline.',\n                showConfirmButton: false,\n                timer: 6000\n              });\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport './i18nextConf';\n\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n \n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n \n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}